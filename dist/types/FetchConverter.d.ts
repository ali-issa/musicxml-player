import type { IMidiFile } from 'midi-json-parser-worker';
import type { IMidiConverter, MeasureTimemap } from './IMidiConverter';
/**
 * Implementation of IMidiConverter that simply fetches given MIDI file and timemap JSON file URIs.
 *
 * The timemap JSON file can be generated using the script midi-timemap which is distributed with musicxml-mma
 * @see https://github.com/infojunkie/musicxml-mma/blob/main/scripts/midi-timemap.js
 * It assumes that the MIDI file is itself generated using musicxml-mma.
 *
 * The timemap JSON structure is simple enough to be generated by other tools as well.
 */
export declare class FetchConverter implements IMidiConverter {
    private _midiOrUri;
    private _timemapOrUri?;
    private _timemap;
    private _midi;
    constructor(_midiOrUri: IMidiFile | string, _timemapOrUri?: string | MeasureTimemap | undefined);
    initialize(musicXml: string): Promise<void>;
    get midi(): IMidiFile;
    get timemap(): MeasureTimemap;
    get version(): string;
    private static _convertTimemap;
}
//# sourceMappingURL=FetchConverter.d.ts.map